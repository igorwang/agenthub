// This file is auto-generated by @hey-api/openapi-ts

export const $ChunkingRequest = {
  properties: {
    file_id: {
      type: "string",
      title: "File Id",
    },
    callback: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Callback",
    },
  },
  type: "object",
  required: ["file_id"],
  title: "ChunkingRequest",
} as const;

export const $ExtractionRequest = {
  properties: {
    file_id: {
      type: "string",
      title: "File Id",
    },
    data_path: {
      type: "string",
      title: "Data Path",
    },
    callback: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Callback",
    },
  },
  type: "object",
  required: ["file_id", "data_path"],
  title: "ExtractionRequest",
} as const;

export const $HTTPValidationError = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
      title: "Detail",
    },
  },
  type: "object",
  title: "HTTPValidationError",
} as const;

export const $ModelInfo = {
  properties: {
    name: {
      type: "string",
      title: "Name",
    },
    max_tokens: {
      type: "integer",
      title: "Max Tokens",
      default: 4096,
    },
    provider: {
      type: "string",
      title: "Provider",
      default: "",
    },
  },
  type: "object",
  required: ["name"],
  title: "ModelInfo",
} as const;

export const $PostMessageSchema = {
  properties: {
    agent_id: {
      type: "integer",
      title: "Agent Id",
    },
    message_id: {
      anyOf: [
        {
          type: "string",
          format: "uuid4",
        },
        {
          type: "string",
        },
      ],
      title: "Message Id",
    },
    session_id: {
      anyOf: [
        {
          type: "string",
          format: "uuid4",
        },
        {
          type: "string",
        },
      ],
      title: "Session Id",
    },
  },
  type: "object",
  required: ["agent_id", "message_id", "session_id"],
  title: "PostMessageSchema",
} as const;

export const $ValidationError = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
      title: "Location",
    },
    msg: {
      type: "string",
      title: "Message",
    },
    type: {
      type: "string",
      title: "Error Type",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
  title: "ValidationError",
} as const;
