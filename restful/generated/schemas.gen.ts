// This file is auto-generated by @hey-api/openapi-ts

export const $ChunkingRequest = {
    properties: {
        file_id: {
            type: 'string',
            title: 'File Id'
        },
        callback: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Callback'
        }
    },
    type: 'object',
    required: ['file_id'],
    title: 'ChunkingRequest'
} as const;

export const $ExtractionRequest = {
    properties: {
        file_id: {
            type: 'string',
            title: 'File Id'
        },
        data_path: {
            type: 'string',
            title: 'Data Path'
        },
        callback: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Callback'
        }
    },
    type: 'object',
    required: ['file_id', 'data_path'],
    title: 'ExtractionRequest'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $ModelInfo = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        max_tokens: {
            type: 'integer',
            title: 'Max Tokens',
            default: 4096
        },
        provider: {
            type: 'string',
            title: 'Provider',
            default: ''
        }
    },
    type: 'object',
    required: ['name'],
    title: 'ModelInfo'
} as const;

export const $PostMessageSchema = {
    properties: {
        agent_id: {
            type: 'integer',
            title: 'Agent Id'
        },
        message_id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid4'
                },
                {
                    type: 'string'
                }
            ],
            title: 'Message Id'
        },
        session_id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid4'
                },
                {
                    type: 'string'
                }
            ],
            title: 'Session Id'
        }
    },
    type: 'object',
    required: ['agent_id', 'message_id', 'session_id'],
    title: 'PostMessageSchema'
} as const;

export const $SearchDocumentResultSchema = {
    properties: {
        file_id: {
            type: 'string',
            title: 'File Id'
        },
        contents: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Contents',
            default: []
        },
        pages: {
            items: {
                type: 'integer'
            },
            type: 'array',
            title: 'Pages',
            default: []
        },
        filename: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Filename'
        },
        url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Url'
        },
        paragraph_info: {
            anyOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Paragraph Info',
            default: []
        }
    },
    type: 'object',
    required: ['file_id', 'filename', 'url'],
    title: 'SearchDocumentResultSchema'
} as const;

export const $SearchRequestSchema = {
    properties: {
        user_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'User Id'
        },
        agent_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Agent Id'
        },
        query: {
            type: 'string',
            title: 'Query'
        },
        target_vector: {
            type: 'string',
            enum: ['default', 'content', 'questions'],
            title: 'Target Vector',
            default: 'default'
        },
        limit: {
            type: 'integer',
            title: 'Limit',
            default: 5
        },
        filter_file_ids: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Filter File Ids'
        }
    },
    type: 'object',
    required: ['user_id', 'agent_id', 'query'],
    title: 'SearchRequestSchema'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;